<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RTS_FogOfWarComponentLibrary</name>
    </assembly>
    <members>
        <member name="T:TWEngine.FOW.NamespaceDoc">
            <summary>
            The <see cref="N:TWEngine.FOW"/> namespace contains the classes
            which make up the entire <see cref="T:TWEngine.FOW.FogOfWar"/>.
            </summary>
        </member>
        <member name="T:TWEngine.FOW.FogOfWar">
            <summary>
            The <see cref="T:TWEngine.FOW.FogOfWar"/> class is a shroud used to hide places, buildings, and enemy units that a player hasn't yet seen.  This means any
            areas which aren't within the sight range of a friendly unit are hidden from the player's view by the fog-of-war.
            </summary>
        </member>
        <member name="M:TWEngine.FOW.FogOfWar.#ctor">
            <summary>
             Default Parameterless constructor, required for the LateBinding on Xbox.
            </summary>
        </member>
        <member name="M:TWEngine.FOW.FogOfWar.#ctor(Microsoft.Xna.Framework.Game)">
            <summary>
             Constructor
            </summary>
            <param name="game"><see cref="T:Microsoft.Xna.Framework.Game"/> game</param>
        </member>
        <member name="M:TWEngine.FOW.FogOfWar.Initialize">
            <summary>
            Set to capture the NullRefExp Error, which will be thrown by base, since the
            Game instance was not able to be set for the Xbox LateBinding version!
            </summary>
        </member>
        <member name="M:TWEngine.FOW.FogOfWar.CommonInitilization(Microsoft.Xna.Framework.Game)">
            <summary>
            Common constructor initilization
            </summary>
            <param name="game"><see cref="T:Microsoft.Xna.Framework.Game"/> instance</param>
        </member>
        <member name="M:TWEngine.FOW.FogOfWar.LoadContent">
            <summary>
            Called when graphics resources need to be loaded. Override this method to load any component-specific graphics resources.
            </summary>
        </member>
        <member name="M:TWEngine.FOW.FogOfWar.UpdateSightMatrices(System.Object,System.EventArgs)">
            <summary>
            <see cref="T:System.EventHandler"/> for forcing the SightMatrices to update themselves, which is 
            indirectly done via the <see cref="M:TWEngine.FOW.FogOfWar.UpdateSightMatrices(System.Object,System.EventArgs)"/> method.
            </summary>
            <param name="sender">Provides a reference to the object that raised the event.</param>
            <param name="e">Passes an object specific to the event that is being handled.</param>
        </member>
        <member name="M:TWEngine.FOW.FogOfWar.InitFogOfWarSettings">
            <summary>
            Call to set the interface references for the <see cref="T:TWEngine.IFOWTerrainShape"/> and
            <see cref="T:TWEngine.IFOWTerrainData"/>. 
            </summary>
        </member>
        <member name="M:TWEngine.FOW.FogOfWar.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Renders the <see cref="T:TWEngine.FOW.FogOfWar"/> texture.
            </summary>
            <param name="inGameTime"><see cref="T:Microsoft.Xna.Framework.GameTime"/> instance</param>
        </member>
        <member name="M:TWEngine.FOW.FogOfWar.AddSelectableItem(TWEngine.IFOWSceneItem)">
            <summary>
             Add a <see cref="T:TWEngine.IFOWSceneItem"/> selectable item to the
             internal collection, for use when doing the sight calculations.
            </summary>
            <param name="selectableItem"><see cref="T:TWEngine.IFOWSceneItem"/> instance</param>
        </member>
        <member name="M:TWEngine.FOW.FogOfWar.RemoveSelectableItem(TWEngine.IFOWSceneItem)">
            <summary>
            Removes all <see cref="T:TWEngine.IFOWSceneItem"/> selectable items where the
            'Delete' property is set to TRUE.
            </summary>
            <param name="selectableItem"><see cref="T:TWEngine.IFOWSceneItem"/> instance</param>
        </member>
        <member name="M:TWEngine.FOW.FogOfWar.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Renders the <see cref="T:TWEngine.FOW.FogOfWar"/> texture.
            </summary>
            <param name="gameTime"><see cref="T:Microsoft.Xna.Framework.GameTime"/> instance</param>
        </member>
        <member name="M:TWEngine.FOW.FogOfWar.UpdateFogOfWar(Microsoft.Xna.Framework.Game)">
            <summary>
            Updates the <see cref="T:TWEngine.FOW.FogOfWar"/> texture.
            </summary> 
            <param name="game"><see cref="T:Microsoft.Xna.Framework.Game"/> instance</param>       
        </member>
        <member name="M:TWEngine.FOW.FogOfWar.UpdateLogicalRepresentationOfFOW">
            <summary>
            Does the Updating of the Logical Representation of <see cref="T:TWEngine.FOW.FogOfWar"/>.
            </summary>
        </member>
        <member name="M:TWEngine.FOW.FogOfWar.UpdateSightMatrices(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Game,System.Collections.Generic.IList{TWEngine.IFOWSceneItem},System.Int32)">
            <summary>
            Updates the Logical Representation of the <see cref="T:TWEngine.FOW.FogOfWar"/> by iterating through
            all the <paramref name="selectableItems"/> given, and sets the <see cref="F:TWEngine.FOW.FogOfWar._visitedTiles"/> and <see cref="F:TWEngine.FOW.FogOfWar._visibleTiles"/> collections
            accordingly.
            </summary>
            <param name="gameTime"><see cref="T:Microsoft.Xna.Framework.GameTime"/> instance</param>
            <param name="game"><see cref="T:Microsoft.Xna.Framework.Game"/> instance</param>
            <param name="selectableItems">Collection of <see cref="T:TWEngine.IFOWSceneItem"/></param>
            <param name="thisPlayerNumber">Player number for 'This' player.</param>
        </member>
        <member name="M:TWEngine.FOW.FogOfWar.IsMapObjectsVisible(Microsoft.Xna.Framework.Game,System.Collections.Generic.IList{TWEngine.IFOWSceneItem},System.Int32)">
            <summary>
            Loops through all <paramref name="selectableItems"/> of a player and determines whether the map
            objects is visible or not.
            </summary>
            <param name="game"><see cref="T:Microsoft.Xna.Framework.Game"/> instance</param>
            <param name="selectableItems">Collection of <see cref="T:TWEngine.IFOWSceneItem"/></param>
            <param name="enemyPlayerNumber">Enemy player number</param>
        </member>
        <member name="M:TWEngine.FOW.FogOfWar.CalculateFogOfWarView``1(``0@,Microsoft.Xna.Framework.Rectangle@)">
            <summary>
            Calculates the <see cref="T:TWEngine.FOW.FogOfWar"/> view field, using the properties
            contain inside the <see cref="T:TWEngine.IFOWSceneItem"/> Interface object.
            </summary>
            <param name="item"><see cref="T:TWEngine.IFOWSceneItem"/> to Calculate for</param>
            <param name="fogOfWarDest">(OUT) <see cref="T:Microsoft.Xna.Framework.Rectangle"/> for <see cref="T:TWEngine.FOW.FogOfWar"/> destination</param>
        </member>
        <member name="M:TWEngine.FOW.FogOfWar.Dispose(System.Boolean)">
            <summary>
            Disposes of unmanaged resources.
            </summary>
            <param name="disposing">Is this final dispose?</param>
        </member>
        <member name="P:TWEngine.FOW.FogOfWar.GameInstance">
            <summary>
             <see cref="T:Microsoft.Xna.Framework.Game"/> instance
            </summary>
        </member>
        <member name="P:TWEngine.FOW.FogOfWar.FogOfWarTexture">
            <summary>
             The <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D"/> with fog-of-war <see cref="!:RenderTarget"/> result.
            </summary>
        </member>
        <member name="P:TWEngine.FOW.FogOfWar.UpdateSight">
            <summary>
             Set to force SightMatrices to update themselves, which is 
             indirectly done via the <see cref="M:TWEngine.FOW.FogOfWar.UpdateSightMatrices(System.Object,System.EventArgs)"/> method.
            </summary>
        </member>
        <member name="P:TWEngine.FOW.FogOfWar.IsVisible">
            <summary>
             Show <see cref="T:TWEngine.FOW.FogOfWar"/>?
            </summary>
        </member>
        <member name="P:TWEngine.FOW.FogOfWar.V">
            <summary>
             Show <see cref="T:TWEngine.FOW.FogOfWar"/>?
            </summary>
        </member>
        <member name="T:TWEngine.FOW.Visited">
            <summary>
            The <see cref="T:TWEngine.FOW.Visited"/> structure is used to store when a visiting <see cref="T:TWEngine.IFOWSceneItem"/> has
            occurred, storing the exact <see cref="T:Microsoft.Xna.Framework.GameTime"/> of the occurrence. 
            </summary>
        </member>
        <member name="F:TWEngine.FOW.Visited.WasVisited">
            <summary>
             Was <see cref="T:TWEngine.IFOWSceneItem"/> visited by some other <see cref="T:TWEngine.IFOWSceneItem"/>?
            </summary>
        </member>
        <member name="F:TWEngine.FOW.Visited.TimeVisitedAt">
            <summary>
             Exact <see cref="T:Microsoft.Xna.Framework.GameTime"/> of the occurrence.
            </summary>
        </member>
    </members>
</doc>
