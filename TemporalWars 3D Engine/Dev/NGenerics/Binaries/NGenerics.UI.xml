<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NGenerics.UI</name>
    </assembly>
    <members>
        <member name="T:NGenerics.UI.DataStructures.General.ObservableBag`1">
            <summary>
            Represents a dynamic data <see cref="T:NGenerics.DataStructures.General.Bag`1"/> that provides notifications when items get added, removed, or when the whole list is refreshed.
            </summary>
            <typeparam name="T">The type of elements in the <see cref="T:NGenerics.UI.DataStructures.General.ObservableBag`1"/>.</typeparam>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableBag`1.#ctor">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableBag`1.#ctor(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableBag`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableBag`1.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableBag`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.General.ObservableBag`1.CollectionChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableBag`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.General.ObservableBag`1.PropertyChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableBag`1.OnPropertyChanged(System.String[])">
            <summary>
            Called when the specified properties change.
            </summary>
            <param name="propertyNames">The property names.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableBag`1.BlockReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy"/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableBag`1.CheckReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy"/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableBag`1.AddItem(`0,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableBag`1.RemoveItem(`0,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableBag`1.ClearItems">
            <inheritdoc />
        </member>
        <member name="E:NGenerics.UI.DataStructures.General.ObservableBag`1.CollectionChanged">
            <inheritdoc />
        </member>
        <member name="E:NGenerics.UI.DataStructures.General.ObservableBag`1.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="T:NGenerics.UI.DataStructures.General.ObservableHashList`2">
            <summary>
            Represents a dynamic data <see cref="T:NGenerics.DataStructures.General.HashList`2"/> that provides notifications when items get added, removed, or when the whole list is refreshed.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHashList`2.#ctor">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHashList`2.#ctor(System.Collections.Generic.IDictionary{`0,System.Collections.Generic.IList{`1}})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHashList`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHashList`2.#ctor(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHashList`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHashList`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHashList`2.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.General.ObservableHashList`2.CollectionChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHashList`2.OnPropertyChanged(System.String[])">
            <summary>
            Called when the specified properties change.
            </summary>
            <param name="propertyNames">The property names.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHashList`2.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.General.ObservableHashList`2.PropertyChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHashList`2.BlockReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy"/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHashList`2.CheckReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy"/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHashList`2.AddItem(`0,System.Collections.Generic.IList{`1})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHashList`2.AddItem(System.Collections.Generic.KeyValuePair{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHashList`2.RemoveItem(`0)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHashList`2.ClearItems">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHashList`2.RemoveValueItem(`1)">
            <summary>
            Removes the first instance found of the value specified from the HashList.
            </summary>
            <param name="item">The item.</param>
            <returns>
            A value indicating whether or not an item matching the criteria was found and removed.
            </returns>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHashList`2.RemoveItem(`0,`1)">
            <summary>
            Removes the item from this instance.
            </summary>
            <param name="key">The key.</param>
            <param name="item">The item to remove.</param>
            <returns>An indication of whether the item was found, and removed.</returns>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHashList`2.RemoveAllItems(`1)">
            <summary>
            Removes all the specified values from the HashList.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="E:NGenerics.UI.DataStructures.General.ObservableHashList`2.CollectionChanged">
            <inheritdoc />
        </member>
        <member name="E:NGenerics.UI.DataStructures.General.ObservableHashList`2.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="T:NGenerics.UI.DataStructures.General.ObservableHeap`1">
            <summary>
            Represents a dynamic data <see cref="T:NGenerics.DataStructures.General.Heap`1"/> that provides notifications when items get added, removed, or when the whole list is refreshed.
            </summary>
            <typeparam name="T">The type of item stored in the <see cref="T:NGenerics.UI.DataStructures.General.ObservableHeap`1"/>.</typeparam>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHeap`1.#ctor(NGenerics.DataStructures.General.HeapType)">
            <summary>
            Initializes a new instance of the <see cref="T:NGenerics.UI.DataStructures.General.ObservableHeap`1"/> class.
            </summary>
            <param name="type">The type of Heap to create.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="type"/> is not either <see cref="F:NGenerics.DataStructures.General.HeapType.Maximum"/> or <see cref="F:NGenerics.DataStructures.General.HeapType.Minimum"/> .</exception>
            <example>
            	<code source="..\..\..\Examples\ExampleLibraryCSharp\DataStructures\General\HeapExamples.cs" region="Constructor" lang="cs" title="The following example shows how to use the default constructor."/>
            	<code source="..\..\..\Examples\ExampleLibraryVB\DataStructures\General\HeapExamples.vb" region="Constructor" lang="vbnet" title="The following example shows how to use the default constructor."/>
            </example>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHeap`1.#ctor(NGenerics.DataStructures.General.HeapType,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHeap`1.#ctor(NGenerics.DataStructures.General.HeapType,System.Collections.Generic.IComparer{`0})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHeap`1.#ctor(NGenerics.DataStructures.General.HeapType,System.Int32,System.Collections.Generic.IComparer{`0})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHeap`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.General.ObservableHeap`1.CollectionChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHeap`1.OnPropertyChanged(System.String[])">
            <summary>
            Called when the specified properties change.
            </summary>
            <param name="propertyNames">The property names.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHeap`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.General.ObservableHeap`1.PropertyChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHeap`1.BlockReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy"/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHeap`1.CheckReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy"/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHeap`1.AddItem(`0)">
            <summary>
            Adds the item.
            </summary>
            <param name="item">The item to add.</param>
            <remarks>
            	<b>Notes to Inheritors: </b>
            Derived classes can override this method to change the behavior of the Add method.
            </remarks>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHeap`1.RemoveRootItem(`0)">
            <summary>
            Removes the root item.
            </summary>
            <param name="item">The item.</param>
            <remarks>
            	<b>Notes to Inheritors: </b>
            Derived classes can override this method to change the behavior of the RemoveRoot method.
            </remarks>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableHeap`1.ClearItems">
            <inheritdoc />
        </member>
        <member name="E:NGenerics.UI.DataStructures.General.ObservableHeap`1.CollectionChanged">
            <inheritdoc />
        </member>
        <member name="E:NGenerics.UI.DataStructures.General.ObservableHeap`1.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="T:NGenerics.UI.DataStructures.General.ObservablePascalSet">
            <summary>
            Represents a dynamic data <see cref="T:NGenerics.DataStructures.General.PascalSet"/> that provides notifications when items get added, removed, or when the whole list is refreshed.
            </summary>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservablePascalSet.#ctor(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservablePascalSet.#ctor(System.Int32,System.Int32[])">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservablePascalSet.#ctor(System.Int32,System.Int32,System.Int32[])">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservablePascalSet.#ctor(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservablePascalSet.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.General.ObservablePascalSet.CollectionChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservablePascalSet.OnPropertyChanged(System.String[])">
            <summary>
            Called when the specified properties change.
            </summary>
            <param name="propertyNames">The property names.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservablePascalSet.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.General.ObservablePascalSet.PropertyChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservablePascalSet.BlockReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy"/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservablePascalSet.CheckReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy"/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservablePascalSet.AddItem(System.Int32,System.Int32)">
            <summary>
            Adds the item to the set.
            </summary>
            <param name="item">The item to add.</param>
            <param name="offset">The offset in which to add the item.</param>
            <remarks>
            	<b>Notes to Inheritors: </b>
            Derived classes can override this method to change the behavior of the Add method.
            </remarks>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservablePascalSet.ClearItems">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservablePascalSet.RemoveItem(System.Int32,System.Int32)">
            <summary>
            Removes the item from the set.
            </summary>
            <param name="item">The item to remove.</param>
            <param name="offset">The offset at which to remove the item.</param>
            <remarks>
            	<b>Notes to Inheritors: </b>
            Derived classes can override this method to change the behavior of the Remove method.
            </remarks>
        </member>
        <member name="E:NGenerics.UI.DataStructures.General.ObservablePascalSet.CollectionChanged">
            <inheritdoc />
        </member>
        <member name="E:NGenerics.UI.DataStructures.General.ObservablePascalSet.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="T:NGenerics.UI.DataStructures.General.ObservableSkipList`2">
            <summary>
            Represents a dynamic data <see cref="T:NGenerics.DataStructures.General.SkipList`2"/> that provides notifications when items get added, removed, or when the whole list is refreshed.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableSkipList`2.AddItem(`0,`1)">
            <summary>
            Adds the item to the collection.
            </summary>
            <param name="key">The key of the item.</param>
            <param name="value">The value to add to the colleciton.</param>
            <remarks>
            	<b>Notes to Inheritors: </b>
            Derived classes can override this method to change the behavior of the Add(TKey,TValue) method.
            </remarks>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableSkipList`2.RemoveItem(`0)">
            <summary>
            Removes the item from the collection.
            </summary>
            <param name="key">The key to remove.</param>
            <returns></returns>
            <remarks>
            	<b>Notes to Inheritors: </b>
            Derived classes can override this method to change the behavior of the Remove(TKey) method.
            </remarks>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableSkipList`2.ClearItems">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableSkipList`2.#ctor">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableSkipList`2.#ctor(System.Collections.Generic.IComparer{`0})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableSkipList`2.#ctor(System.Int32,System.Double,System.Collections.Generic.IComparer{`0})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableSkipList`2.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.General.ObservableSkipList`2.CollectionChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableSkipList`2.OnPropertyChanged(System.String[])">
            <summary>
            Called when the specified properties change.
            </summary>
            <param name="propertyNames">The property names.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableSkipList`2.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.General.ObservableSkipList`2.PropertyChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableSkipList`2.BlockReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy"/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.General.ObservableSkipList`2.CheckReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy"/>
        </member>
        <member name="E:NGenerics.UI.DataStructures.General.ObservableSkipList`2.CollectionChanged">
            <inheritdoc />
        </member>
        <member name="E:NGenerics.UI.DataStructures.General.ObservableSkipList`2.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="T:NGenerics.UI.DataStructures.Queues.ObservableCircularQueue`1">
            <summary>
            Represents a dynamic data <see cref="T:NGenerics.DataStructures.Queues.CircularQueue`1"/> that provides notifications when items get added, removed, or when the whole list is refreshed.
            </summary>
            <typeparam name="T">The type of the elements in the <see cref="T:NGenerics.UI.DataStructures.Queues.ObservableCircularQueue`1"/>.</typeparam>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableCircularQueue`1.#ctor(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableCircularQueue`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.Queues.ObservableCircularQueue`1.CollectionChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableCircularQueue`1.OnPropertyChanged(System.String[])">
            <summary>
            Called when the specified properties change.
            </summary>
            <param name="propertyNames">The property names.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableCircularQueue`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.Queues.ObservableCircularQueue`1.PropertyChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableCircularQueue`1.BlockReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy"/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableCircularQueue`1.CheckReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy"/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableCircularQueue`1.EnqueueItem(`0)">
            <summary>
            Enqueues the item.
            </summary>
            <param name="item">The item to enqueue.</param>
            <inheritdoc/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableCircularQueue`1.DequeueItem">
            <summary>
            Dequeues the item.
            </summary>
            <returns>The item at the front of the queue.</returns>
            <remarks>
            	<b>Notes to Inheritors: </b>
            Derived classes can override this method to change the behavior of the Dequeue method.
            </remarks>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableCircularQueue`1.ClearItems">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableCircularQueue`1.RemoveItem(`0)">
            <summary>
            Removes the item.
            </summary>
            <param name="item">The item.</param>
            <returns>
            An indication of whether the item was found, and removed.
            </returns>
            <remarks>
            	<b>Notes to Inheritors: </b>
            Derived classes can override this method to change the behavior of the Remove method.
            </remarks>
        </member>
        <member name="E:NGenerics.UI.DataStructures.Queues.ObservableCircularQueue`1.CollectionChanged">
            <inheritdoc />
        </member>
        <member name="E:NGenerics.UI.DataStructures.Queues.ObservableCircularQueue`1.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="T:NGenerics.UI.DataStructures.Queues.ObservableDeque`1">
            <summary>
            Represents a dynamic data <see cref="T:NGenerics.DataStructures.Queues.Deque`1"/> that provides notifications when items get added, removed, or when the whole list is refreshed.
            </summary>
            <typeparam name="T">The type of the elements in the <see cref="T:NGenerics.UI.DataStructures.Queues.ObservableDeque`1"/>.</typeparam>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableDeque`1.DequeueHeadItem">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableDeque`1.DequeueTailItem">
            <summary>
            Dequeues the tail item.
            </summary>
            <returns>The item that was dequeued.</returns>
            <remarks>
            	<b>Notes to Inheritors: </b>
            Derived classes can override this method to change the behavior of the DequeueTail method.
            </remarks>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableDeque`1.EnqueueTailItem(`0)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableDeque`1.EnqueueHeadItem(`0)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableDeque`1.ClearItems">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableDeque`1.#ctor">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableDeque`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableDeque`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.Queues.ObservableDeque`1.CollectionChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableDeque`1.OnPropertyChanged(System.String[])">
            <summary>
            Called when the specified properties change.
            </summary>
            <param name="propertyNames">The property names.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableDeque`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.Queues.ObservableDeque`1.PropertyChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableDeque`1.BlockReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy"/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableDeque`1.CheckReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy"/>
        </member>
        <member name="E:NGenerics.UI.DataStructures.Queues.ObservableDeque`1.CollectionChanged">
            <inheritdoc />
        </member>
        <member name="E:NGenerics.UI.DataStructures.Queues.ObservableDeque`1.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="T:NGenerics.UI.DataStructures.Queues.ObservablePriorityQueue`1">
            <summary>
            Represents a dynamic data <see cref="T:NGenerics.DataStructures.Queues.PriorityQueue`1"/> that provides notifications when items get added, removed, or when the whole list is refreshed.
            </summary>
            <typeparam name="T">The type of the elements in the <see cref="T:NGenerics.UI.DataStructures.Queues.ObservablePriorityQueue`1"/>.</typeparam>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservablePriorityQueue`1.AddItem(`0,System.Int32)">
            <summary>
            Adds the item to the queue.
            </summary>
            <param name="item">The item to add.</param>
            <param name="priority">The priority of the item.</param>
            <remarks>
            	<b>Notes to Inheritors: </b>
            Derived classes can override this method to change the behavior of the Add(T,int) method.
            </remarks>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservablePriorityQueue`1.RemoveItem(`0,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservablePriorityQueue`1.RemoveItems(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservablePriorityQueue`1.DequeueItem(System.Int32@)">
            <summary>
            Dequeues the item at the front of the queue.
            </summary>
            <param name="priority"></param>
            <returns>The item at the front of the queue.</returns>
            <remarks>
            	<b>Notes to Inheritors: </b>
            Derived classes can override this method to change the behavior of the Dequeue() or Dequeue(out int) methods.
            </remarks>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservablePriorityQueue`1.ClearItems">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservablePriorityQueue`1.AddPriorityGroupItem(System.Collections.Generic.IList{`0},System.Int32)">
            <summary>
            Adds the specified items to the priority queue with the specified priority.
            </summary>
            <param name="items">The items.</param>
            <param name="priority">The priority.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservablePriorityQueue`1.#ctor(NGenerics.DataStructures.Queues.PriorityQueueType)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservablePriorityQueue`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.Queues.ObservablePriorityQueue`1.CollectionChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservablePriorityQueue`1.OnPropertyChanged(System.String[])">
            <summary>
            Called when the specified properties change.
            </summary>
            <param name="propertyNames">The property names.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservablePriorityQueue`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.Queues.ObservablePriorityQueue`1.PropertyChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservablePriorityQueue`1.BlockReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy"/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservablePriorityQueue`1.CheckReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy"/>
        </member>
        <member name="E:NGenerics.UI.DataStructures.Queues.ObservablePriorityQueue`1.CollectionChanged">
            <inheritdoc />
        </member>
        <member name="E:NGenerics.UI.DataStructures.Queues.ObservablePriorityQueue`1.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="T:NGenerics.UI.DataStructures.Queues.ObservableVisitableQueue`1">
            <summary>
            Represents a dynamic data <see cref="T:NGenerics.DataStructures.Queues.VisitableQueue`1"/> that provides notifications when items get added, removed, or when the whole list is refreshed.
            </summary>
            <typeparam name="T">The type of elements in the <see cref="T:NGenerics.UI.DataStructures.Queues.ObservableVisitableQueue`1"/>.</typeparam>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableVisitableQueue`1.EnqueueItem(`0)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableVisitableQueue`1.DequeueItem">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableVisitableQueue`1.ClearItems">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableVisitableQueue`1.#ctor">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableVisitableQueue`1.#ctor(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableVisitableQueue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableVisitableQueue`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.Queues.ObservableVisitableQueue`1.CollectionChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableVisitableQueue`1.OnPropertyChanged(System.String[])">
            <summary>
            Called when the specified properties change.
            </summary>
            <param name="propertyNames">The property names.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableVisitableQueue`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.Queues.ObservableVisitableQueue`1.PropertyChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableVisitableQueue`1.BlockReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy"/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Queues.ObservableVisitableQueue`1.CheckReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy"/>
        </member>
        <member name="E:NGenerics.UI.DataStructures.Queues.ObservableVisitableQueue`1.CollectionChanged">
            <inheritdoc />
        </member>
        <member name="E:NGenerics.UI.DataStructures.Queues.ObservableVisitableQueue`1.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="T:NGenerics.UI.DataStructures.Trees.ObservableBinarySearchTree`2">
            <summary>
            Represents a dynamic data <see cref="T:NGenerics.DataStructures.Trees.BinarySearchTree`2"/> that provides notifications when items get added, removed, or when the whole list is refreshed.
            </summary>
            <typeparam name="TKey">The type of the keys in the tree.</typeparam>
            <typeparam name="TValue">The type of the values in the tree.</typeparam>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinarySearchTree`2.AddItem(`0,`1)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinarySearchTree`2.RemoveItem(`0)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinarySearchTree`2.ClearItems">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinarySearchTree`2.#ctor">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinarySearchTree`2.#ctor(System.Collections.Generic.IComparer{`0})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinarySearchTree`2.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.Trees.ObservableBinarySearchTree`2.CollectionChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinarySearchTree`2.OnPropertyChanged(System.String[])">
            <summary>
            Called when the specified properties change.
            </summary>
            <param name="propertyNames">The property names.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinarySearchTree`2.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.Trees.ObservableBinarySearchTree`2.PropertyChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinarySearchTree`2.BlockReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy"/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinarySearchTree`2.CheckReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy"/>
        </member>
        <member name="E:NGenerics.UI.DataStructures.Trees.ObservableBinarySearchTree`2.CollectionChanged">
            <inheritdoc />
        </member>
        <member name="E:NGenerics.UI.DataStructures.Trees.ObservableBinarySearchTree`2.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="T:NGenerics.UI.DataStructures.Trees.ObservableBinaryTree`1">
            <summary>
            Represents a dynamic data <see cref="T:NGenerics.DataStructures.Trees.BinaryTree`1"/> that provides notifications when items get added, removed, or when the whole list is refreshed.
            </summary>
            <typeparam name="T">The type of elements in the <see cref="T:NGenerics.UI.DataStructures.Trees.ObservableBinaryTree`1"/>.</typeparam>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinaryTree`1.RemoveLeft">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinaryTree`1.RemoveRight">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinaryTree`1.AddItem(NGenerics.DataStructures.Trees.BinaryTree{`0})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinaryTree`1.Clear">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinaryTree`1.#ctor(`0)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinaryTree`1.#ctor(`0,`0,`0)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinaryTree`1.#ctor(`0,NGenerics.DataStructures.Trees.BinaryTree{`0},NGenerics.DataStructures.Trees.BinaryTree{`0})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinaryTree`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.Trees.ObservableBinaryTree`1.CollectionChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinaryTree`1.OnPropertyChanged(System.String[])">
            <summary>
            Called when the specified properties change.
            </summary>
            <param name="propertyNames">The property names.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinaryTree`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.Trees.ObservableBinaryTree`1.PropertyChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinaryTree`1.BlockReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy"/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableBinaryTree`1.CheckReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy"/>
        </member>
        <member name="E:NGenerics.UI.DataStructures.Trees.ObservableBinaryTree`1.CollectionChanged">
            <inheritdoc />
        </member>
        <member name="E:NGenerics.UI.DataStructures.Trees.ObservableBinaryTree`1.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="T:NGenerics.UI.DataStructures.Trees.ObservableGeneralTree`1">
            <summary>
            Represents a dynamic data <see cref="T:NGenerics.DataStructures.Trees.GeneralTree`1"/> that provides notifications when items get added, removed, or when the whole list is refreshed.
            </summary>
            <typeparam name="T">The type of elements in the <see cref="T:NGenerics.UI.DataStructures.Trees.ObservableGeneralTree`1"/>.</typeparam>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableGeneralTree`1.InsertItem(System.Int32,NGenerics.DataStructures.Trees.GeneralTree{`0})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableGeneralTree`1.RemoveItem(System.Int32,NGenerics.DataStructures.Trees.GeneralTree{`0})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableGeneralTree`1.RemoveItem(`0)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableGeneralTree`1.Clear">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableGeneralTree`1.#ctor(`0)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableGeneralTree`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.Trees.ObservableGeneralTree`1.CollectionChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableGeneralTree`1.OnPropertyChanged(System.String[])">
            <summary>
            Called when the specified properties change.
            </summary>
            <param name="propertyNames">The property names.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableGeneralTree`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.Trees.ObservableGeneralTree`1.PropertyChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableGeneralTree`1.BlockReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy"/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableGeneralTree`1.CheckReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy"/>
        </member>
        <member name="E:NGenerics.UI.DataStructures.Trees.ObservableGeneralTree`1.CollectionChanged">
            <inheritdoc />
        </member>
        <member name="E:NGenerics.UI.DataStructures.Trees.ObservableGeneralTree`1.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="T:NGenerics.UI.DataStructures.Trees.ObservableRedBlackTree`2">
            <summary>
            Represents a dynamic data <see cref="T:NGenerics.DataStructures.Trees.RedBlackTree`2"/> that provides notifications when items get added, removed, or when the whole list is refreshed.
            </summary>
            <typeparam name="TKey">The type of the keys in the <see cref="T:NGenerics.UI.DataStructures.Trees.ObservableRedBlackTree`2"/>.</typeparam>
            <typeparam name="TValue">The type of the values in the <see cref="T:NGenerics.UI.DataStructures.Trees.ObservableRedBlackTree`2"/>.</typeparam>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableRedBlackTree`2.AddItem(`0,`1)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableRedBlackTree`2.RemoveItem(`0)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableRedBlackTree`2.ClearItems">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableRedBlackTree`2.#ctor">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableRedBlackTree`2.#ctor(System.Collections.Generic.IComparer{`0})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableRedBlackTree`2.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.Trees.ObservableRedBlackTree`2.CollectionChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableRedBlackTree`2.OnPropertyChanged(System.String[])">
            <summary>
            Called when the specified properties change.
            </summary>
            <param name="propertyNames">The property names.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableRedBlackTree`2.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.Trees.ObservableRedBlackTree`2.PropertyChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableRedBlackTree`2.BlockReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy"/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableRedBlackTree`2.CheckReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy"/>
        </member>
        <member name="E:NGenerics.UI.DataStructures.Trees.ObservableRedBlackTree`2.CollectionChanged">
            <inheritdoc />
        </member>
        <member name="E:NGenerics.UI.DataStructures.Trees.ObservableRedBlackTree`2.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="T:NGenerics.UI.DataStructures.Trees.ObservableSplayTree`2">
            <summary>
            Represents a dynamic data <see cref="T:NGenerics.DataStructures.Trees.SplayTree`2"/> that provides notifications when items get added, removed, or when the whole list is refreshed.
            </summary>
            <typeparam name="TKey">The type of the keys in the <see cref="T:NGenerics.UI.DataStructures.Trees.ObservableSplayTree`2"/>.</typeparam>
            <typeparam name="TValue">The type of the values in the <see cref="T:NGenerics.UI.DataStructures.Trees.ObservableSplayTree`2"/>.</typeparam>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableSplayTree`2.AddItem(`0,`1)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableSplayTree`2.RemoveItem(`0)">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableSplayTree`2.ClearItems">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableSplayTree`2.#ctor">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableSplayTree`2.#ctor(System.Collections.Generic.IComparer{`0})">
            <inheritdoc />
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableSplayTree`2.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.Trees.ObservableSplayTree`2.CollectionChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableSplayTree`2.OnPropertyChanged(System.String[])">
            <summary>
            Called when the specified properties change.
            </summary>
            <param name="propertyNames">The property names.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableSplayTree`2.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NGenerics.UI.DataStructures.Trees.ObservableSplayTree`2.PropertyChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableSplayTree`2.BlockReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy"/>
        </member>
        <member name="M:NGenerics.UI.DataStructures.Trees.ObservableSplayTree`2.CheckReentrancy">
            <inheritdoc cref="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy"/>
        </member>
        <member name="E:NGenerics.UI.DataStructures.Trees.ObservableSplayTree`2.CollectionChanged">
            <inheritdoc />
        </member>
        <member name="E:NGenerics.UI.DataStructures.Trees.ObservableSplayTree`2.PropertyChanged">
            <inheritdoc />
        </member>
    </members>
</doc>
